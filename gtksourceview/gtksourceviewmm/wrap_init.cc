// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#define GLIBMM_INCLUDED_FROM_WRAP_INIT_CC
#include <glibmm.h>

// Disable the 'const' function attribute of the get_type() functions.
// GCC would optimize them out because we don't use the return value.
#undef  G_GNUC_CONST
#define G_GNUC_CONST /* empty */

#include <gtksourceviewmm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "buffer.h"
#include "completion.h"
#include "completionactivation.h"
#include "completioncontext.h"
#include "completioninfo.h"
#include "completionitem.h"
#include "completionproposal.h"
#include "completionprovider.h"
#include "completionwords.h"
#include "gutter.h"
#include "gutterrenderer.h"
#include "gutterrendererpixbuf.h"
#include "gutterrenderertext.h"
#include "language.h"
#include "languagemanager.h"
#include "mark.h"
#include "markattributes.h"
#include "printcompositor.h"
#include "style.h"
#include "stylescheme.h"
#include "styleschememanager.h"
#include "undomanager.h"
#include "view.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType gtk_source_buffer_get_type(void);
GType gtk_source_completion_get_type(void);
GType gtk_source_completion_context_get_type(void);
GType gtk_source_completion_info_get_type(void);
GType gtk_source_completion_item_get_type(void);
GType gtk_source_completion_words_get_type(void);
GType gtk_source_gutter_get_type(void);
GType gtk_source_gutter_renderer_get_type(void);
GType gtk_source_gutter_renderer_pixbuf_get_type(void);
GType gtk_source_gutter_renderer_text_get_type(void);
GType gtk_source_language_get_type(void);
GType gtk_source_language_manager_get_type(void);
GType gtk_source_mark_get_type(void);
GType gtk_source_mark_attributes_get_type(void);
GType gtk_source_print_compositor_get_type(void);
GType gtk_source_style_get_type(void);
GType gtk_source_style_scheme_get_type(void);
GType gtk_source_style_scheme_manager_get_type(void);
GType gtk_source_view_get_type(void);

//Declarations of the *_error_quark() functions:

GQuark gtk_source_completion_error_quark(void);
} // extern "C"

namespace Gsv {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class Buffer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Completion_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CompletionContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CompletionInfo_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CompletionItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CompletionWords_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Gutter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class GutterRenderer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class GutterRendererPixbuf_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class GutterRendererText_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Language_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class LanguageManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Mark_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MarkAttributes_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PrintCompositor_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Style_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StyleScheme_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StyleSchemeManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class View_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:
  Glib::Error::register_domain(gtk_source_completion_error_quark(), &SourceCompletionError::throw_func);

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(gtk_source_buffer_get_type(), &Buffer_Class::wrap_new);
  Glib::wrap_register(gtk_source_completion_get_type(), &Completion_Class::wrap_new);
  Glib::wrap_register(gtk_source_completion_context_get_type(), &CompletionContext_Class::wrap_new);
  Glib::wrap_register(gtk_source_completion_info_get_type(), &CompletionInfo_Class::wrap_new);
  Glib::wrap_register(gtk_source_completion_item_get_type(), &CompletionItem_Class::wrap_new);
  Glib::wrap_register(gtk_source_completion_words_get_type(), &CompletionWords_Class::wrap_new);
  Glib::wrap_register(gtk_source_gutter_get_type(), &Gutter_Class::wrap_new);
  Glib::wrap_register(gtk_source_gutter_renderer_get_type(), &GutterRenderer_Class::wrap_new);
  Glib::wrap_register(gtk_source_gutter_renderer_pixbuf_get_type(), &GutterRendererPixbuf_Class::wrap_new);
  Glib::wrap_register(gtk_source_gutter_renderer_text_get_type(), &GutterRendererText_Class::wrap_new);
  Glib::wrap_register(gtk_source_language_get_type(), &Language_Class::wrap_new);
  Glib::wrap_register(gtk_source_language_manager_get_type(), &LanguageManager_Class::wrap_new);
  Glib::wrap_register(gtk_source_mark_get_type(), &Mark_Class::wrap_new);
  Glib::wrap_register(gtk_source_mark_attributes_get_type(), &MarkAttributes_Class::wrap_new);
  Glib::wrap_register(gtk_source_print_compositor_get_type(), &PrintCompositor_Class::wrap_new);
  Glib::wrap_register(gtk_source_style_get_type(), &Style_Class::wrap_new);
  Glib::wrap_register(gtk_source_style_scheme_get_type(), &StyleScheme_Class::wrap_new);
  Glib::wrap_register(gtk_source_style_scheme_manager_get_type(), &StyleSchemeManager_Class::wrap_new);
  Glib::wrap_register(gtk_source_view_get_type(), &View_Class::wrap_new);

  // Register the gtkmm gtypes:
  Buffer::get_type();
  Completion::get_type();
  CompletionContext::get_type();
  CompletionInfo::get_type();
  CompletionItem::get_type();
  CompletionWords::get_type();
  Gutter::get_type();
  GutterRenderer::get_type();
  GutterRendererPixbuf::get_type();
  GutterRendererText::get_type();
  Language::get_type();
  LanguageManager::get_type();
  Mark::get_type();
  MarkAttributes::get_type();
  PrintCompositor::get_type();
  Style::get_type();
  StyleScheme::get_type();
  StyleSchemeManager::get_type();
  View::get_type();

} // wrap_init()

} // Gsv

